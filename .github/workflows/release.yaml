name: Release

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: true
      release_name:
        description: 'Release name (e.g., Initial Release)'
        required: true
      prerelease:
        description: 'Pre-release flag'
        default: false
      draft:
        description: 'Draft flag'
        default: false


permissions:
  contents: write

jobs:
  build-and-release:
    name: Compile and Release Binary
    runs-on: ubuntu-latest

    env:
      APP_VERSION: ${{ inputs.release_tag }}

    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 10
          token: ${{ steps.app-token.outputs.token }}

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: 8.2
          extensions: inotify, apcu, sysvmsg, pcntl, openswoole, redis
          key: php-ext-key-1

      - name: Cache extensions
        uses: actions/cache@v4
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Set Up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: inotify, apcu, sysvmsg, pcntl, openswoole, redis
          ini-values: variables_order=EGPCS
          tools: composer, phpunit

      - name: Install Composer All Dependencies
        run: composer install && composer bin box install

      - name: Run Unit Tests
        run: phpunit

      - name: Install Composer Dependencies without dev packages
        run: composer install --no-dev --optimize-autoloader

      - name: Compile phar file
        run: |
          echo "Building PHAR: $APP_VERSION"
          ./vendor/bin/box compile  --no-parallel

      - name: Commit and Push Binary
        run: |
          git config user.name "Laralord [bot]"
          git config user.email "github-actions[bot]@laralord.dev"
          git add bin
          git commit -m "Add compiled laralord phar ${{ inputs.release_tag }}"
          git push

      - name: Create and Push Release Tag
        run: |
          git tag -a ${{ inputs.release_tag }} -m "${{ inputs.release_name }}"
          git push origin ${{ inputs.release_tag }}
          

      - name: Create GitHub Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ inputs.release_tag }}
          release_name: ${{ inputs.release_name }}
          draft: ${{ inputs.draft }}
          prerelease: ${{ inputs.prerelease }}
          body: "Release ${{ inputs.release_tag }} includes the compiled binary."

      - name: Upload Binary to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: bin/laralord
          asset_name: laralord
          asset_content_type: application/x-php
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
